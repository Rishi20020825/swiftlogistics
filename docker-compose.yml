version: "3.8"

networks:
  default:
    name: swiftlogistics_default

services:
  traefik:
    image: traefik:v2.10
    container_name: swiftlogistics-traefik-1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - default

  db:
    image: postgres:15
    container_name: swiftlogistics-db-1
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=swiftlogistics_db
      - POSTGRES_USER=swiftuser
      - POSTGRES_PASSWORD=swiftpassword
    ports:
      - "5432:5432"
    networks:
      - default

  rabbitmq:
    image: rabbitmq:3-management
    container_name: swiftlogistics-rabbitmq-1
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - default

  cms_adapter:
    build: ./cms_adapter
    container_name: swiftlogistics-cms_adapter-1
    environment:
      - DATABASE_URL=postgresql://swiftuser:swiftpassword@db:5432/swiftlogistics_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - CMS_MOCK_URL=http://cms_mock:8000/orders
    depends_on:
      - db
      - rabbitmq
      - cms_mock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms.rule=Host(`localhost`) && PathPrefix(`/cms`)"
      - "traefik.http.routers.cms.entrypoints=web"
      - "traefik.http.services.cms.loadbalancer.server.port=8000"
    networks:
      - default

  wms_adapter:
    build: ./wms_adapter
    container_name: swiftlogistics-wms_adapter-1
    environment:
      - DATABASE_URL=postgresql://swiftuser:swiftpassword@db:5432/swiftlogistics_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - WMS_MOCK_URL=http://wms_mock:8000
      - WMS_MOCK_TCP_HOST=wms_mock
      - WMS_MOCK_TCP_PORT=9876
    depends_on:
      - db
      - rabbitmq
      - wms_mock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wms.rule=Host(`localhost`) && PathPrefix(`/wms`)"
      - "traefik.http.routers.wms.entrypoints=web"
      - "traefik.http.services.wms.loadbalancer.server.port=8000"
    networks:
      - default

  ros_adapter:
    build: ./ros_adapter
    container_name: swiftlogistics-ros_adapter-1
    environment:
      - DATABASE_URL=postgresql://swiftuser:swiftpassword@db:5432/swiftlogistics_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - ROS_MOCK_URL=http://ros_mock:8000/routes
    depends_on:
      - db
      - rabbitmq
      - ros_mock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ros.rule=Host(`localhost`) && PathPrefix(`/ros`)"
      - "traefik.http.routers.ros.entrypoints=web"
      - "traefik.http.services.ros.loadbalancer.server.port=8000"
    networks:
      - default

  order-service:
    build: ./order_service
    container_name: order-service
    environment:
      - DATABASE_URL=postgresql://swiftuser:swiftpassword@db:5432/swiftlogistics_db
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - ORDER_QUEUE=order_queue
    depends_on:
      - db
      - rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order-service.rule=PathPrefix(`/orders`)"
      - "traefik.http.services.order-service.loadbalancer.server.port=8001"
    networks:
      - default

  cms_mock:
    build: ./cms_mock
    container_name: swiftlogistics-cms_mock-1
    ports:
      - "8002:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms_mock.rule=Host(`localhost`) && PathPrefix(`/cms_mock`)"
      - "traefik.http.routers.cms_mock.entrypoints=web"
      - "traefik.http.services.cms_mock.loadbalancer.server.port=8000"
    networks:
      - default

  ros_mock:
    build: ./ros_mock
    container_name: swiftlogistics-ros_mock-1
    ports:
      - "8003:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ros_mock.rule=Host(`localhost`) && PathPrefix(`/ros_mock`)"
      - "traefik.http.routers.ros_mock.entrypoints=web"
      - "traefik.http.services.ros_mock.loadbalancer.server.port=8000"
    networks:
      - default

  wms_mock:
    build: ./wms_mock
    container_name: swiftlogistics-wms_mock-1
    ports:
      - "8006:8000"
      - "9876:9876"  # WMS proprietary TCP/IP protocol port
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wms_mock.rule=Host(`localhost`) && PathPrefix(`/wms_mock`)"
      - "traefik.http.routers.wms_mock.entrypoints=web"
      - "traefik.http.services.wms_mock.loadbalancer.server.port=8000"
    networks:
      - default

  tracking_service:
    build: ./tracking_service
    container_name: swiftlogistics-tracking-1
    environment:
      - DATABASE_URL=postgresql://swiftuser:swiftpassword@db:5432/swiftlogistics_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8004:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tracking.rule=Host(`localhost`) && PathPrefix(`/tracking`)"
      - "traefik.http.routers.tracking.entrypoints=web"
      - "traefik.http.services.tracking.loadbalancer.server.port=8000"
    networks:
      - default

  transaction_service:
    build: ./transaction_service
    container_name: swiftlogistics-transaction-1
    environment:
      - DATABASE_URL=postgresql://swiftuser:swiftpassword@db:5432/swiftlogistics_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - db
      - rabbitmq
      - order-service
      - cms_adapter
      - ros_adapter
      - wms_adapter
    ports:
      - "8005:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transaction.rule=Host(`localhost`) && PathPrefix(`/transactions`)"
      - "traefik.http.routers.transaction.entrypoints=web"
      - "traefik.http.services.transaction.loadbalancer.server.port=8000"
    networks:
      - default
